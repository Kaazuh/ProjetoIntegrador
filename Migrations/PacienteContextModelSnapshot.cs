// <auto-generated />
using System;
using CliMedAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CliMedAPI.Migrations
{
    [DbContext(typeof(PacienteContext))]
    partial class PacienteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("CliMedAPI.Model.Consulta", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EspecialistaId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataConsulta")
                        .HasColumnType("datetime");

                    b.HasKey("codigo");

                    b.HasIndex("EspecialistaId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("CliMedAPI.Model.Especialista", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("crm")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("especialidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("exigePlano")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nomeEspecialista")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("id");

                    b.HasIndex("crm")
                        .IsUnique();

                    b.HasIndex("telefone")
                        .IsUnique();

                    b.ToTable("Especialistas");
                });

            modelBuilder.Entity("CliMedAPI.Model.Paciente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("nomePaciente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("planoSaude")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("id");

                    b.HasIndex("cpf")
                        .IsUnique();

                    b.HasIndex("telefone")
                        .IsUnique();

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CliMedAPI.Model.Consulta", b =>
                {
                    b.HasOne("CliMedAPI.Model.Especialista", "Especialista")
                        .WithMany("Consultas")
                        .HasForeignKey("EspecialistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CliMedAPI.Model.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialista");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CliMedAPI.Model.Especialista", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("CliMedAPI.Model.Paciente", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
